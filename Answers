

Görevler
Aşağıda istenilen sonuçlara ulaşabilmek için gerekli SQL sorgularını yazın.

1) ÖRNEK SORU: Yazar tablosunu KEMAL UYUMAZ isimli yazarı ekleyin.
INSERT INTO yazar(yazarad, yazarsoyad)
VALUES('KEMAL', 'UYUMAZ')

2) Biyografi türünü tür tablosuna ekleyiniz.
INSERT INTO tur (turadi)
VALUES ('Biyografi')

3) 10A sınıfı olan ÇAĞLAR ÜZÜMCÜ isimli erkek, sınıfı 9B olan LEYLA ALAGÖZ isimli kız ve sınıfı 11C olan Ayşe Bektaş isimli kız öğrencileri tek sorguda ekleyin.
INSERT INTO ogrenci(ograd, ogrsoyad, cinsiyet, sinif)
VALUES('ÇAĞLAR', 'ÜZÜMCÜ', 'E', 10A), ('LEYLA', 'ALAGÖZ', 'K', '9B'), ('Ayşe', 'Bektaş', 'K', '11C')

4) Öğrenci tablosundaki rastgele bir öğrenciyi yazarlar tablosuna yazar olarak ekleyiniz.
INSERT INTO yazar(yazarad, yazarsoyad)
SELECT ograd, ogrsoyad FROM ogrenci
ORDER BY random() LIMIT 1

5) Öğrenci numarası 10 ile 30 arasındaki öğrencileri yazar olarak ekleyiniz.
INSERT INTO yazar(yazarad, yazarsoyad)
SELECT ograd, ogrsoyad FROM ogrenci
WHERE ogrno>10 AND ogrno<30

6) Nurettin Belek isimli yazarı ekleyip yazar numarasını yazdırınız.
(Not: Otomatik arttırmada son arttırılan değer @@IDENTITY değişkeni içinde tutulur.)
INSERT INTO yazar(yazarad, yazarsoyad)
VALUES('Nurettin', 'Belek') RETURNING yazarno

7) 10B sınıfındaki öğrenci numarası 3 olan öğrenciyi 10C sınıfına geçirin.
UPDATE ogrenci SET sinif='10C' WHERE ogrno=3

8) 9A sınıfındaki tüm öğrencileri 10A sınıfına aktarın
UPDATE ogrenci SET sinif='10A' WHERE sinif='9A'

9) Tüm öğrencilerin puanını 5 puan arttırın.
UPDATE ogrenci SET puan = puan+5

10) 25 numaralı yazarı silin.
DELETE from yazar WHERE yazarno=25

11) Doğum tarihi null olan öğrencileri listeleyin. (insert sorgusu ile girilen 3 öğrenci listelenecektir)
SELECT * from ogrenci WHERE dtarih is null

12) Doğum tarihi null olan öğrencileri silin.
DELETE from ogrenci WHERE dtarih is null

13) Kitap tablosunda adı a ile başlayan kitapların puanlarını 2 artırın.
UPDATE kitap SET puan = puan+2
WHERE kitapadi ilike 'a%'

14) Kişisel Gelişim isimli bir tür oluşturun.
INSERT INTO tur(turadi) VALUES('Kişisel Gelişim')

15) Kitap tablosundaki Başarı Rehberi kitabının türünü bu tür ile değiştirin.
UPDATE kitap SET turno=(SELECT turno FROM tur WHERE turadi='Kişisel Gelişim')
WHERE kitapadi='Başarı Rehberi'

16) Öğrenci tablosunu kontrol etmek amaçlı tüm öğrencileri görüntüleyen "ogrencilistesi" adında bir prosedür oluşturun.

CREATE FUNCTION ogrencilistesi()
RETURNS SET OF ogrenci
LANGUAGE 'sql'
AS $BODY$
SELECT * FROM ogrenci
$BODY$

17) Öğrenci tablosuna yeni öğrenci eklemek için "ekle" adında bir prosedür oluşturun.

CREATE PROCEDURE ogrenciEkle(ogr_ad character varying, ogr_soyad character varying)
RETURNS SET OF ogrenci
LANGUAGE 'sql'
AS $BODY$
INSERT INTO ogrenci(ograd, ogrsoyad)
VALUES (ogr_ad, ogr_soyad)
$BODY$


18) Öğrenci noya göre öğrenci silebilmeyi sağlayan "sil" adında bir prosedür oluşturun.

CREATE PROCEDURE ogrenciSil(ogr_no integer)
LANGUAGE 'sql'
AS $BODY$
DELETE from ogrenci WHERE ogrno=ogr_no
$BODY$

19) Öğrenci numarasını kullanarak kolay bir biçimde öğrencinin sınıfını değiştirebileceğimiz bir prosedür oluşturun.

CREATE PROCEDURE sinifDegistir(ogr_no integer, ogr_sinif character varying)
LANGUAGE 'sql'
AS $BODY$
UPDATE ogrenci SET sinif=ogr_sinif WHERE ogrno=ogr_no
$BODY$

20) Öğrenci adı ve soyadını "Ad Soyad" olarak birleştirip, ad soyada göre kolayca arama yapmayı sağlayan bir prosedür yazın.

CREATE FUNCTION ogrAra(ogr_ad_soyad character varying)
RETURNS SET OF ogrenci
LANGUAGE 'sql'
AS $BODY$
SELECT * from ogrenci WHERE CONCAT(ograd, ogrsoyad) ILIKE CONCAT('%', 'ogr_ad_soyad', '%')
$BODY$

21) Daha önceden oluşturduğunu tüm prosedürleri silin.


#Esnek görevler (Esnek görevlerin hepsini Select in Select ile gerçekleştirmeniz beklenmektedir.)
22) Select in select yöntemiyle dram türündeki kitapları listeleyiniz.


23) Adı e harfi ile başlayan yazarların kitaplarını listeleyin.


24) Kitap okumayan öğrencileri listeleyiniz.


25) Okunmayan kitapları listeleyiniz


26) Mayıs ayında okunmayan kitapları listeleyiniz.



